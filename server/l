#!/usr/bin/perl

# perl CGI script that displays sqlite tracking data
#
#  Author:          Petre Rodan <petre.rodan@simplex.ro>
#  Available from:  https://github.com/rodan/tracy
#  License:         GNU GPLv3
#

use strict;
use warnings;
use DBI;
use POSIX;

my $imei = '013227009851738';
#my $imei = '013227002533879';

my $i;
my @cell;

my $database = '/var/lib/tracking/' . $imei . '.db';
my $dsn = 'DBI:SQLite:database=' . $database;
my $username = undef;
my $password = undef;
my $dbh = DBI->connect($dsn, $username, $password, { RaiseError => 0 }) or die $DBI::errstr;

print "Content-Type: text/html\n\n";

if ( -z "$database" ) {
    print 'no such db';
    die;
} 

print '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">';
print '<html><head><title>gps locations</title><link href="/css/main.css" rel="stylesheet" type="text/css">' . 
    '<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></head><body>';
print '<p>device imei: ' . $imei . '</p>';
print '<table class="content2" summary="tracking data">';
print '<tr><td class="title">id</td><td class="title">timestamp (GMT)</td><td class="title">latitude</td><td class="title">longitude</td><td class="title">map</td><td class="title">PDOP</td><td class="title">speed</td><td class="title">gd</td><td class="title">gb</td><td class="title">V</td><td class="title">rxl</td><td class="title">cellid</td><td class="title">mcc</td><td class="title">mnc</td><td class="title">lac</td><td class="title">tower coord</td><td class="title">avg cell coord</td></tr>';


my $sth = $dbh->prepare('SELECT row_id, v_bat, v_raw, payload, timestamp, latitude, longitude, pdop, speed, fixtime, geo_distance, geo_bearing, c0_rxl, c0_mcc, c0_mnc, c0_cellid, c0_lac, c0_latitude, c0_longitude, c1_rxl, c1_mcc, c1_mnc, c1_cellid, c1_lac, c1_latitude, c1_longitude, c2_rxl, c2_mcc, c2_mnc, c2_cellid, c2_lac, c2_latitude, c2_longitude, c3_rxl, c3_mcc, c3_mnc, c3_cellid, c3_lac, c3_latitude, c3_longitude, avg_latitude, avg_longitude FROM live order by row_id DESC LIMIT 25');
$sth->execute();

my $row;
while ($row = $sth->fetchrow_arrayref()) {

    ($i->{'row_id'}, $i->{'v_bat'}, $i->{'v_raw'}, $i->{'payload'}, $i->{'timestamp'}, $i->{'latitude'}, $i->{'longitude'}, 
        $i->{'pdop'}, $i->{'speed'}, $i->{'fixtime'}, $i->{'geo_distance'}, $i->{'geo_bearing'},
        $cell[0]->{'rxl'}, $cell[0]->{'mcc'}, $cell[0]->{'mnc'}, $cell[0]->{'id'}, $cell[0]->{'lac'}, $cell[0]->{'latitude'}, $cell[0]->{'longitude'},  
        $cell[1]->{'rxl'}, $cell[1]->{'mcc'}, $cell[1]->{'mnc'}, $cell[1]->{'id'}, $cell[1]->{'lac'}, $cell[1]->{'latitude'}, $cell[1]->{'longitude'},
        $cell[2]->{'rxl'}, $cell[2]->{'mcc'}, $cell[2]->{'mnc'}, $cell[2]->{'id'}, $cell[2]->{'lac'}, $cell[2]->{'latitude'}, $cell[2]->{'longitude'},
        $cell[3]->{'rxl'}, $cell[3]->{'mcc'}, $cell[3]->{'mnc'}, $cell[3]->{'id'}, $cell[3]->{'lac'}, $cell[3]->{'latitude'}, $cell[3]->{'longitude'},
        $i->{'avg_latitude'}, $i->{'avg_longitude'}) = @$row;


    if ( "$i->{'latitude'}" eq "" ) {
        print '<tr><td>' . $i->{'row_id'} . '</td><td>' . $i->{'timestamp'} . '</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>';
    } else {
        my $lat = sprintf( '%.6f', $i->{'latitude'});
        my $lon = sprintf( '%.6f', $i->{'longitude'});
        my $gd = sprintf( '%.1f', $i->{'geo_distance'});

        print '<tr><td>' . $i->{'row_id'} . '</td><td>' . $i->{'timestamp'} . '</td><td>' . $lat . '</td><td>' . $lon . 
        '</td><td><a href="https://www.google.com/maps/place/' . $lat . '%20' . $lon . '">g</a>' . 
        '<a href="http://wikimapia.org/#lang=en&amp;lat=' . $lat . '&amp;lon=' . $lon . '&amp;z=16&amp;m=w">w</a>' . 
        '<a href="http://www.openstreetmap.org/search?query=' . $lat . '%20' . $lon .'">o</a>' . 
        '</td><td>' . $i->{'pdop'}. '</td><td>' . $i->{'speed'} . '</td><td>' .
        $gd . '</td><td>' . $i->{'geo_bearing'} . '</td>';
    }

    if ( "$i->{'v_bat'}" eq "" ) {
        print '<td></td>';
    } else {
        if ( "$i->{'v_raw'}" < 1 ) {
            print '<td>' . $i->{'v_bat'} . '</td>';
        } else {
            print '<td>' . $i->{'v_bat'} . ' ' . $i->{'v_raw'} .'</td>';
        }
    }


    my $lat = sprintf( '%.6f', $i->{'avg_latitude'});
    my $lon = sprintf( '%.6f', $i->{'avg_longitude'});

    print '<td>' . $cell[0]->{'rxl'} . '</td><td>' . $cell[0]->{'id'} . '</td><td>' . $cell[0]->{'mcc'} . 
        '</td><td>' . $cell[0]->{'mnc'} . '</td><td>' . $cell[0]->{'lac'} . 
        '</td><td><a href="https://www.google.com/maps/place/' . $cell[0]->{'latitude'} . '%20' . $cell[0]->{'longitude'} . 
        '">' . $cell[0]->{'latitude'} . ' ' . $cell[0]->{'longitude'} . '</a></td><td><a href="https://www.google.com/maps/place/' . 
        $lat . '%20' . $lon . '">' .
        $lat . ' ' . $lon . '</a></td></tr>';

    for (my $j = 1; $j < ($i->{'payload'} & 0x7); $j++) {

        if (( "$cell[$j]->{'id'}" != "65535") && ("$cell[$j]->{'id'}" != "0")) {
            print '<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td><td>' . 
                $cell[$j]->{'rxl'} . '</td><td>' . $cell[$j]->{'id'} . '</td><td>' . $cell[$j]->{'mcc'} . 
                '</td><td>' . $cell[$j]->{'mnc'} . '</td><td>' . $cell[$j]->{'lac'} . 
                '</td><td><a href="https://www.google.com/maps/place/' . $cell[$j]->{'latitude'} . '%20' . $cell[$j]->{'longitude'} . 
                '">' . $cell[$j]->{'latitude'} . ' ' . $cell[$j]->{'longitude'} . '</a></td><td></td></tr>';

        }
    }

}

$sth->finish();
$dbh->disconnect();

print '</table></body></html>'
